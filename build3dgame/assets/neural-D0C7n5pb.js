import{r,V as E,u as G,j as n,A as F,R as L,C as U}from"./react-three-fiber.esm-C_InriM3.js";import{S as k}from"./Stats-CwypN_tr.js";function N(){const C=r.useRef(),b=r.useRef(),x=r.useRef(),y=1e3,h=500,c=10,d=c/2,R=20,w=2.5;let l=0,u=0,g=0;const j=y*y,i=r.useMemo(()=>new Float32Array(j*3),[j]),a=r.useMemo(()=>new Float32Array(j*3),[j]),e=r.useMemo(()=>new Float32Array(y*3),[]),f=r.useMemo(()=>[],[]),v=r.useMemo(()=>new E,[]);return r.useEffect(()=>{for(let m=0;m<y;m++){const M=Math.random()*c-c/2,t=Math.random()*c-c/2,o=Math.random()*c-c/2;e[m*3]=M,e[m*3+1]=t,e[m*3+2]=o;const s=new E(-1+Math.random()*2,-1+Math.random()*2,-1+Math.random()*2);f.push({velocity:s.normalize().divideScalar(50),numConnections:0})}b.current.setDrawRange(0,h)}),G((m,M)=>{l=0,u=0,g=0;for(let t=0;t<h;t++)f[t]!==void 0&&(f[t].numConnections=0);for(let t=0;t<h;t++)if(f[t]!==void 0){const o=f[t];if(v.set(e[t*3],e[t*3+1],e[t*3+2]).add(o.velocity).setLength(10),e[t*3]=v.x,e[t*3+1]=v.y,e[t*3+2]=v.z,(e[t*3+1]<-d||e[t*3+1]>d)&&(o.velocity.y=-o.velocity.y),(e[t*3]<-d||e[t*3]>d)&&(o.velocity.x=-o.velocity.x),(e[t*3+2]<-d||e[t*3+2]>d)&&(o.velocity.z=-o.velocity.z),o.numConnections>=R)continue;for(let s=t+1;s<h;s++){const z=f[s];if(z.numConnections>=R)continue;const A=e[t*3]-e[s*3],S=e[t*3+1]-e[s*3+1],D=e[t*3+2]-e[s*3+2],B=Math.sqrt(A*A+S*S+D*D);if(B<w){o.numConnections++,z.numConnections++;const p=1-B/w;i[l++]=e[t*3],i[l++]=e[t*3+1],i[l++]=e[t*3+2],i[l++]=e[s*3],i[l++]=e[s*3+1],i[l++]=e[s*3+2],a[u++]=p,a[u++]=p,a[u++]=p,a[u++]=p,a[u++]=p,a[u++]=p,g++}}}x.current.setDrawRange(0,g*2),x.current.attributes.position.needsUpdate=!0,x.current.attributes.color.needsUpdate=!0,b.current.attributes.position.needsUpdate=!0,C.current.rotation.y+=M/5}),n.jsxs("group",{ref:C,dispose:null,children:[n.jsxs("points",{children:[n.jsx("bufferGeometry",{ref:b,children:n.jsx("bufferAttribute",{attach:"attributes-position",count:h,array:e,itemSize:3})}),n.jsx("pointsMaterial",{color:"white",size:3,blending:F,transparent:!0,sizeAttenuation:!1})]}),n.jsxs("lineSegments",{children:[n.jsxs("bufferGeometry",{ref:x,children:[n.jsx("bufferAttribute",{attach:"attributes-position",count:i.length/3,array:i,itemSize:3}),n.jsx("bufferAttribute",{attach:"attributes-color",count:a.length/3,array:a,itemSize:3})]}),n.jsx("lineBasicMaterial",{vertexColors:!0,blending:F,transparent:!0,opacity:.3})]}),n.jsx(k,{})]})}L.createRoot(document.getElementById("root")).render(n.jsxs(U,{camera:{position:[-15,12,12],fov:60},style:{width:"100%",height:"100%"},gl:{alpha:!0},children:[n.jsx("hemisphereLight",{intensity:.1}),n.jsx("directionalLight",{position:[5,5,5],castShadow:!0,intensity:1.1}),n.jsx(r.Suspense,{fallback:null,children:n.jsx(N,{})})]}));
